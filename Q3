#include <iostream>
using namespace std;

class Node {
public:
    int data;
    Node* next;
    Node* prev;
    Node(int val) { data = val; next = prev = nullptr; }
};

int sizeDoubly(Node* head) {
    int count = 0;
    while (head) {
        count++;
        head = head->next;
    }
    return count;
}

int sizeCircular(Node* head) {
    if (!head) return 0;
    int count = 0;
    Node* temp = head;
    do {
        count++;
        temp = temp->next;
    } while (temp != head);
    return count;
}

int main() {
    Node* d1 = new Node(1);
    d1->next = new Node(2);
    d1->next->prev = d1;
    d1->next->next = new Node(3);
    d1->next->next->prev = d1->next;

    cout << "Size of Doubly Linked List: " << sizeDoubly(d1) << endl;

    Node* c1 = new Node(10);
    Node* c2 = new Node(20);
    Node* c3 = new Node(30);
    c1->next = c2;
    c2->next = c3;
    c3->next = c1;

    cout << "Size of Circular Linked List: " << sizeCircular(c1) << endl;
    return 0;
}
